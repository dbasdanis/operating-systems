Λειτουργικά Συστήματα - 2η Εργασία

Αξιολόγηση αποτελεσμάτων.

Για την αξιολόγηση του αλγορίθμου SJF χρησιμοποιήσαμε τρία αρχεία. Το πρώτο(Interactive.conf), δημιουργεί μόνο διεργασίες τύπου Interactive. Το δέυτερο(NonInteractive.conf) δημιουργεί μόνο NonInteractive διεργασίες ενώ το τρίτο(mixed.txt) περιέχει διεργασίες και των δύο τύπων.

Επίσης υλοποιήσαμε και αξιολογήσαμε τρείς διαφορετικές εκδοχές του αλγορίθμου SJF. Στην πρώτη εκδοχή ο αλγόριθμος επιλέγει την διεργασία με το μικρότερο εκτιμόμενο  χρόνο εκτέλεσης βασιζόμενος στη προηγούμενη εκτέλεση. Στην δέυτερη και στη τρίτη υπολογίζει μια προτεραιότητα για κάθε διεργασία. Η προτεραιότητα αυτή προκύπτει με βάση τον εκτιμόμενο χρόνο εκτέλεσης και το χρόνο αναμονής της διεργασίας στην ουρά των έτοιμων διεργασιών.

Στη περίπτωση που όλες οι διεργασίες είναι τύπου NonInteractive ο αλγόριθμος σε όλες τις εκδοχές επιλέγει όλες τις διεργασίες παρόμοια με τον αλγόριθμο Round-Robin. Αυτό συμβαίνει γιατί όλες οι διεργασίες χρησιμοποιούν ολόκληρο το κύκλο του ρολογιού και μετά το schedule εισέρχονται κατευθειαν στην ουρά των έτοιμων διεργασιών. Αξίζει να σημειωθεί πως στη περίπτωση που χρησιμοποιόυμε και το χρόνο αναμονής μιας διεργασίας στην ουρά, ο αλγόριθμος δεν επιλεγει σχεδόν ποτέ την ίδια διεργασία να τρέξει για δεύτερη συνεχόμενη φορά εάν υπάρχουν άλλες έτοιμες διεργασίες.

Στη περίπτωση που όλες οι διεργασίες είναι τύπου Interactive, όταν χρησιμοποιόυμε μόνο το expected burst για τη χρονοδρομολόγηση φαίνεται πως "αδικούνται" κάποιες διεργασίες ίσως γιατί είχαν μεγάλο τελευταίο "ξέσπασμα" και ο αλγόριθμος επιλέγει άλλες με μικρότερο. Συνυπολογίζοντας και το χρόνο αναμονής στην ουρά ο αλγόριθμος γίνεται πιο δίκαιος προς όλες τις διεργασίες και δεν υπάρχει κάποια που να περιμένει για μεγάλο χρονικό διάστημα στην ουρά.

Τέλος στη περίπτωση που έχουμε διεργασίες και των δύο ειδών γίνεται εμφανής η βασική αδυναμία του SJF αλγορίθμου. Οι NonInteractive διεργασίες, πρακτικά λιμοκτονούν, αφού ο χρονοδρομολογητής τις αδικεί έναντι των διεργασιών που απασχολούν για μικρα χρονικά διαστήματα τον επεξεργαστή. Έτσι βλέπουμε τις υπολογιστικές διεργασίες να περιμένουν για μεγάλο χρονικό διάστημα στην ουρά.
Το πρόβλημα λύνεται σε ικανοποιητικό βαθμό εάν ο αλγόριθμος επιλέγει την επόμενη διεργασία συνυπολογίζοντας και τον χρόνο αναμονής της κάθε διεργασίας στην ουρά. Σε αυτή τη περίπτωση καμία διεργασία δεν αδικείται ένατι άλλων.

Συνοψίζοντας, ο SJF αλγόριθμος γίνεται πιο δίκαιος όταν χρησιμοποιεί και τον χρόνο αναμονής στην ουρά των έτοιμων διεργασιών για να επιλέξει την επόμενη διεργασία που θα "παρει" τον επεξεργαστή.


Αντωνίου Θεόδωρος 2208
Μπασδάνης Διονύσης 2166


